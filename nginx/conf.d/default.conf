# HTTP redirect to HTTPS for API traffic
server {
    listen 80;
    
    # Only redirect API and WebSocket traffic
    location /api/ {
        return 301 https://$host:5002$request_uri;
    }
    
    location /socket.io/ {
        return 301 https://$host:5002$request_uri;
    }
    
    # For all other traffic, let it pass through
    location / {
        return 301 http://$host:5173$request_uri;
    }
}

# API and WebSocket server (port 5002)
server {
    listen 5002 ssl;
    http2 on;
    listen 5003 quic;
    
    ssl_certificate /etc/nginx/certs/dev-cert.pem;
    ssl_certificate_key /etc/nginx/certs/dev-key.pem;
    
    # HTTP/3 support
    add_header Alt-Svc 'h3=":5003"; ma=86400';
    
    # Backend API
    location /api/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # WebSockets for Socket.IO with HTTP/3 support
    location /socket.io/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Long timeout for WebSocket connections
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 60s;
        
        # Disable buffering
        proxy_buffering off;
    }
} 