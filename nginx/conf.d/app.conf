# HTTP redirect to HTTPS
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    # HTTP -> HTTPS redirect
    return 301 https://$host:5002$request_uri;
}

# HTTPS server on standard port (443) - redirects to port 5002
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    http2 on;
    # HTTP/3 support
    listen 443 quic;
    listen [::]:443 quic;
    
    # SSL certificate configuration - self-signed for development
    ssl_certificate /etc/nginx/certs/dev-cert.pem;
    ssl_certificate_key /etc/nginx/certs/dev-key.pem;
    
    # HTTP/3 header
    add_header Alt-Svc 'h3=":443"; ma=86400';
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # SSL configuration - development settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    
    # Redirect to the specific port
    return 301 https://$host:5002$request_uri;
}

# HTTPS server with HTTP/3 support on custom port (5002)
server {
    # Listen on port 5002 for HTTPS traffic
    listen 5002 ssl default_server;
    listen [::]:5002 ssl default_server;
    http2 on;
    # HTTP/3 support on UDP port
    listen 5003 quic;
    listen [::]:5003 quic;
    
    # SSL certificate configuration - self-signed for development
    ssl_certificate /etc/nginx/certs/dev-cert.pem;
    ssl_certificate_key /etc/nginx/certs/dev-key.pem;
    
    # HTTP/3 header - Point to the UDP port for HTTP/3
    add_header Alt-Svc 'h3=":5003"; ma=86400';
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # SSL configuration - development settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    
    # Proxy to frontend development server
    location / {
        proxy_pass http://frontend:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Vite HMR WebSocket endpoint
    location /ws {
        proxy_pass http://frontend:5173/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy API requests to the backend
    location /api/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Proxy websocket connections to the backend
    location /socket.io/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s; # 5 minutes
    }

    # Enable GZIP compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
} 