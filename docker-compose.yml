services:
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile.dev
    ports:
      - "3000:3000"
      - "9229:9229" # for debugging
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages:/app/packages
      - turbo_cache:/app/.turbo/cache
      - pnpm_store:/pnpm/store
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=dev-secret-key
      - PORT=3000
      - TURBO_TELEMETRY_DISABLED=1
      - PNPM_VERSION=8.6.0
    depends_on:
      - postgres
    working_dir: /app/apps/backend
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile.dev
    # Expose the frontend port directly
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - ./packages:/app/packages
      - turbo_cache:/app/.turbo/cache
      - pnpm_store:/pnpm/store
    environment:
      - NODE_ENV=development
      # Point to Nginx for WebSocket connections that need HTTP/3
      - VITE_API_URL=https://localhost:5002
      - VITE_WS_URL=wss://localhost:5002
      - TURBO_TELEMETRY_DISABLED=1
      - PNPM_VERSION=8.6.0
    depends_on:
      - backend
    working_dir: /app/apps/frontend
    restart: unless-stopped

  nginx:
    image: nginx:1.25.4-alpine
    ports:
      - "5002:5002/tcp"   # Custom HTTPS port for API and WebSockets
      - "5003:5003/udp"   # Required for HTTP/3 (QUIC)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    # Enable HTTP/3 in Nginx
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.core.somaxconn=4096
      - net.ipv4.ip_local_port_range=1024 65000

  postgres:
    image: postgres:16-alpine
    ports:
      - "12312:5432"
    environment:
      - POSTGRES_DB=chat_app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  
volumes:
  postgres_data:
  backend_node_modules:
  turbo_cache:
  pnpm_store:
  migration_cache: 